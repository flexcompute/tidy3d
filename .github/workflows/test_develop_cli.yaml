name: test-develop-cli

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches:
      - develop
      - 'pre/*'

jobs:
  test-dev-commands:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Pre-install Pandoc
      run: |
        if ([[ "${{ matrix.os }}" == "ubuntu-latest" ]]); then
          sudo apt-get install pandoc
          # Additional installation steps for Ubuntu
        elif ([[ "${{ matrix.os }}" == "macos-latest" ]]); then
          brew install pandoc
          # Additional installation steps for macOS
        elif ([[ "${{ matrix.os }}" == "windows-latest" ]]); then
          choco install pandoc
          # Additional installation steps for Windows
        fi

    - name: Verify existing installations
      run: |
        python3 --version
        pipx --version

    - name: Install poetry
      run: |
        if ! pipx install poetry; then
          echo "Failed to install poetry"
          exit 1
        fi

    - name: Verify poetry installation
      run: |
        poetry --version

    - name: Run install-dev-environment command
      run: |
        # Unsure if this is a valid command since it just guarantees things run on previous dependencies installation
        # TODO finish debugging installation without previous installation.
        tidy3d develop install-dev-environment

    - name: Run development test commands
      run: |
        exit
        
        
