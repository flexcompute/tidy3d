name: "tidy3d-frontend-tests"

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches:
      - develop
      - 'pre/*'

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Test pre-commit hooks
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit run
  build:
    name: test ${{ matrix.python-version }} - ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        platform: [ubuntu-latest, macos-latest, windows-latest]
        exclude:
          - python-version: '3.8'
            platform: 'windows-latest'
    defaults:
      run:
        shell: bash
    env:  # Set environment variables for the whole job
      PIP_ONLY_BINARY: gdstk
      MPLBACKEND: agg
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root -E dev
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install library
      run: poetry install --no-interaction -E dev
    #----------------------------------------------
    #    add matrix specifics and run test suite
    #----------------------------------------------
    - name: Run tests
      run: |
        source $VENV
        black . --check --diff
        ruff check tidy3d --fix --exit-non-zero-on-fix
        pytest -rA tests
        pytest -rA tests/test_data/_test_datasets_no_vtk.py
