name: "tidy3d-coverage"

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches:
      - develop

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  FORCE_COLOR: 1    # Get colored pytest output

permissions:
  contents: read

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Test pre-commit hooks
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit
          pre-commit run
  build:
    name: Coverage Test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:  # Set environment variables for the whole job
      PIP_ONLY_BINARY: gdstk
      MPLBACKEND: agg
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.6.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root -E dev
    #----------------------------------------------
    # install your root project, if required
    #----------------------------------------------
    - name: Install library
      run: poetry install --no-interaction -E dev
    #----------------------------------------------
    #    add matrix specifics and run test suite
    #----------------------------------------------
    - name: Run tests
      run: |
        source $VENV
        black . --check --diff
        ruff check tidy3d --fix --exit-non-zero-on-fix
        coverage run -m pytest -rA tests
        coverage report -m
        echo "total=$(coverage report --format=total)" >> $GITHUB_ENV
        echo '### Total coverage: ${{ env.total }}%'

    - name: "Create badge"
      # if: ${{ github.ref == 'refs/heads/latest' }}
      # https://gist.githubusercontent.com/nedbat/8c6980f77988a327348f9b02bbaf67f5
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GH_TIDY3D_COVERAGE_GIST }}
        gistID: 4702549574741e87deaadba436218ebd
        filename: tidy3d_extension.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 60
        maxColorRange: 95
        valColorRange: ${{ env.total }}
        style: "for-the-badge"
