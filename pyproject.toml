[tool.poetry]
name = "tidy3d"
version = "2.6.1"  # Thinking about bump2version
description = "A fast FDTD solver"
authors = ["Tyler Hughes <tyler@flexcompute.com>"]
license = "LGPLv2+"
readme = "README.md"
homepage = "https://github.com/flexcompute/tidy3d"
repository = "https://github.com/flexcompute/tidy3d"
classifiers = [
    "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
documentation = "https://docs.flexcompute.com/projects/tidy3d/en/latest/"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/flexcompute/tidy3d/issues"

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
pyroots = ">=0.5.0"
xarray = ">=0.16.2"
importlib-metadata = "^6.0.0"
h5netcdf = "1.0.2"
h5py = "^3.0.0"
rich = "<12.6.0"
matplotlib = "*"
shapely = "^2.0"
pydantic = "^2.0"
PyYAML = "*"
dask = "*"
toml = "*"
### NOT CORE
scipy = "*"
boto3 = "1.23.1"
requests = "*"
pyjwt = "*"
click = "8.0.3"
responses = "*"
### END NOT CORE

### Optional dependencies ### 
# development core
black = {version="23.12.1", optional = true}
coverage = {version="*", optional = true}
dill = {version="*", optional = true}
ipython = {version="*", optional = true}
memory_profiler = {version="*", optional = true}
pre-commit = {version="*", optional = true}
pylint = {version="*", optional = true}
pytest = {version="*", optional = true}
pytest-timeout = {version="*", optional = true}
ruff = {version="*", optional = true}
tox = {version="*", optional = true}


# gdspy
gdspy = {version="*", optional = true}

# gdstk
gdstk = {version=">=0.9.49", optional = true}

# jax
jaxlib = [
    {version = ">=0.4.1,<=0.4.14", platform = "linux",  source="jaxsource", optional = true},
    {version = ">=0.4.1,<=0.4.14", platform = "darwin",  source="jaxsource", optional = true},
    {version = ">=0.4.13,<=0.4.14", platform = "win32", source="jaxsource", python = "^3.9", optional = true}
]
jax = [
    {version = ">=0.4.1,<=0.4.14", extras = ["cpu"], platform = "linux", source="jaxsource", optional = true},
    {version = ">=0.4.1,<=0.4.14", extras = ["cpu"], platform = "darwin",  source="jaxsource", optional = true},
    {version = ">=0.4.13,<=0.4.14", extras = ["cpu"], platform = "win32", python = "^3.9", source="jaxsource", optional = true}
]

# trimesh
networkx = {version = "^2.6.3", optional = true}
rtree = {version = "1.0.1", optional = true}
trimesh = {version = "3.20.0", optional = true}

# docs
jupyter = {version="*", optional = true}
jinja2 = {version = ">=3.1.2", optional = true}
nbconvert = {version = ">=7.11.0", optional = true}
sphinx = {version=">=6", optional = true}
nbsphinx = {version = ">=0.8.7", optional = true}
sphinx-copybutton = {version=">=0.5.2", optional = true}
sphinx-book-theme = {version = ">=1.0.1", optional = true}
pydata-sphinx-theme = {version = ">=0.13.3", optional = true}
# divparams = {optional = true, git = "https://github.com/daquinteroflex/sphinxcontrib-divparams.git"} # TODO FIX
tmm = {version="*", optional = true}
grcwa = {version="*", optional = true}
sphinx-favicon = {version="*", optional = true}
sphinx-sitemap = {version=">=2.5.1", optional = true}
sphinx-notfound-page = {version="*", optional = true}
sphinx-tabs = {version="*", optional = true}
nbdime = {version="*", optional = true}
myst-parser = {version="*", optional = true}
optax = {version="*", optional = true}
signac = {version="*", optional = true}
sax = {version="*", optional = true}
vtk = {version="<=9.2.6", optional = true}
pyswarms = {version="*", optional = true}
sphinxemoji = {version="*", optional = true}
devsim = {version="*", optional = true}
cma = {version="*", optional = true}

[tool.poetry.extras]
dev = ['black', "coverage", 'dill', 'divparams', 'gdspy', 'gdstk', 'gdstk', 'grcwa', 'ipython', 'ipython', 'jax', 'jaxlib', 'jinja2',
  'jupyter', 'jupyterblack', 'myst-parser', 'memory_profiler', 'nbconvert', 'nbdime', 'nbsphinx', 'networkx', 'optax', 'pre-commit',
  'pydata-sphinx-theme', 'pylint', 'pyswarms', 'pytest', 'pytest-timeout', 'rtree', 'ruff', 'sax', 'signac', 'sphinx',
  'sphinx-book-theme', 'sphinx-copybutton', 'sphinx-favicon', 'sphinx-notfound-page', 'sphinx-sitemap', 'sphinx-tabs', 'sphinxemoji', 'tmm', 'tox', 'trimesh',
    'vtk', 'devsim', 'cma']
docs = ["jupyter", "jinja2", "nbconvert", "sphinx", "nbsphinx", "ipython", "divparams", "sphinx-copybutton", 'sphinx-favicon', "sphinx-book-theme", "pydata-sphinx-theme", "tmm", "gdstk", "grcwa", "sphinx-sitemap", 'sphinx-notfound-page', "nbdime", "optax", "signac", "sax", "pylint", "jupyterblack", "sphinx-tabs", "sphinxemoji", "myst-parser", "devsim", "cma"]
gdspy = ["gdspy"]
gdstk = ["gdstk"]
jax = ["jaxlib", "jax"]
trimesh = ["trimesh", "networkx", "rtree"]
vtk = ["vtk"]

[tool.poetry.scripts]
tidy3d = "tidy3d.web.cli:tidy3d_cli"

[[tool.poetry.source]]
name = "pypi"
priority = "primary"

[[tool.poetry.source]]
name = "jaxsource"
url = "https://storage.googleapis.com/jax-releases/jax_releases.html"
priority = "supplemental"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''


[tool.ruff]
ignore-init-module-imports = true
typing-modules = ["tidy3d.components.types"] # without this Literal["something fails"]
line-length = 100
fix = true
ignore = [
  "E501",  # line too long, handled by black
  "B008",  # do not perform function calls in argument defaults
  "C901",  # too complex
  "UP007", # use x | y instead of union[x,y] (does not work)
  "B905",  # `zip()` without an explicit `strict=` parameter
  "C408",  # C408 Unnecessary `dict` call (rewrite as a literal)
  "B904",
  "B028",  # stacklevel
  "UP006", # typy annotation with Tuple[float] messes up pydantic
  "UP038", # TODO decide what to do here
  "UP035", # TODO decide what to do here
]

select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP"
]

target-version = "py310"
